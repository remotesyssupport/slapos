[buildout]
parts =
  instance
  import

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}

[instance]
recipe = ${instance-recipe:egg}:${instance-recipe:module}
dcrond_binary = ${dcron:location}/sbin/crond
innobackupex_binary = ${xtrabackup:location}/bin/innobackupex
logrotate_binary = ${logrotate:location}/usr/sbin/logrotate
mysql_binary = ${mariadb:location}/bin/mysql
mysql_install_binary = ${mariadb:location}/bin/mysql_install_db
mysql_upgrade_binary = ${mariadb:location}/bin/mysql_upgrade
mysqld_binary = ${mariadb:location}/libexec/mysqld
mysqldump_binary = ${mariadb:location}/bin/mysqldump
openssl_binary = ${openssl:location}/bin/openssl
perl_binary = ${perl:location}/bin/perl
rdiff_backup_binary = ${buildout:bin-directory}/rdiff-backup
stunnel_binary = ${stunnel:location}/bin/stunnel
duplicity_binary = ${buildout:bin-directory}/duplicity
davstorage-software-url = http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/slapos-0.44:/software/davstorage/software.cfg
bash_binary = ${bash:location}/bin/bash
gzip_binary = ${gzip:location}/bin/gzip

[import_script]
recipe = slapos.cookbook:format
filename = import-script.sh
source = ${import_script:location}/import-script.sh
substitute_bash_binary = ${dollar}{instance:bash_binary}
substitute_duplicity_binary = ${dollar}{instance:duplicity_binary}
substitute_local_directory = ${dollar}{buildout:directory}/srv/backup/mysql
substitute_dump_name = ${dollar}{:substitute_local_directory}/dump.sql.gz
substitute_mysql_socket = ${dollar}{buildout:directory}/var/run/mysqld.sock
substitute_mysql_binary = ${dollar}{instance:mysql_binary}
substitute_lock_file = ${dollar}{buildout:directory}/var/run/import_done
location = ${dollar}{buildout:directory}/templates
# If there's no parameter remote_backup
# it will be overriden by parameter and connection xml
substitute_parameter_remote_backup = null
substitute_connection_mysql_database = null

[import]
recipe = slapos.cookbook:conditionalrunner
parameters = remote_backup
cmd = ${dollar}{instance:bash_binary} ${dollar}{import_script:location}/${dollar}{import_script:filename}
name = import
